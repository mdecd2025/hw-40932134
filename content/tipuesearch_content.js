var tipuesearch = {"pages": [{'title': 'About', 'text': '課程名稱: 協同產品設計實習 - Collaborative Product Design Practice \n 學員作業網站:\xa0 https://mdecd2025.github.io/hw-40932134/ \n 學員作業倉儲:\xa0 https://github.com/mdecd2025/hw-40932134 \xa0 \n \n 課程代號: cd2025 \n Teams 線上教學: \n 以 "學號@nfu.edu.tw" 登入 \xa0 https://login.microsoftonline.com/ \xa0 Office 365 \n Teams 團隊代碼:\xa0 p5z4eku \n \n 課程評分: \n Homework (30%) - 每週至少提交兩次與課程進度有關的內容, 完成後填回自評表單 \n Exam (40%) - 建立包含操作流程影片、心得以及提供檔案下載的網頁後填回自評表單 \n Final Report (30%) - 利用網頁內容進行簡報並提交 pdf 格式書面報告, 完成後填回自評表單 \n', 'tags': '', 'url': 'About.html'}, {'title': 'Tasks', 'text': '', 'tags': '', 'url': 'Tasks.html'}, {'title': 'Task1', 'text': '', 'tags': '', 'url': 'Task1.html'}, {'title': 'w1', 'text': '1.更改個人網站和倉儲 \n 2.分組組成ag7 \n 3.創建並登入 onshape \n', 'tags': '', 'url': 'w1.html'}, {'title': 'w2', 'text': '228放假 \n', 'tags': '', 'url': 'w2.html'}, {'title': 'w3', 'text': '列出 2a 學員作業網站與倉儲連結 \n 列出 2b 學員作業網站與倉儲連結 \n 列出 2a 分組網站與倉儲連結 \n 列出 2b 分組網站與倉儲連結 \n', 'tags': '', 'url': 'w3.html'}, {'title': 'w4', 'text': '利用ipv6開啟近端 \n 需改內容 \n \n a後面數值要去按照座號順序輸入 \n \n IP位置需改成ip6設的ip \n \n', 'tags': '', 'url': 'w4.html'}, {'title': 'w5', 'text': '假設您希望在 Webots 中建立一個簡單場景：一個機器人在平面上移動並避開障礙物。以下是手把手說明如何透過圖形介面完成： \n 步驟 1：啟動 Webots \n \n \n 打開 Webots 應用程式。 \n \n \n 在啟動畫面選擇「New World」（新建世界）。 \n \n \n 步驟 2：設置基本場景 \n \n \n 加入地板 \n \n \n 在頂部選單點擊「Add」（添加）。 \n \n \n 選擇「Solid」（實體物件） > 「Box」（方塊）。 \n \n \n 在屬性面板中設置： \n \n \n 大小（Size）：10m x 10m x 0.1m（寬廣的平面）。 \n \n \n 名稱（Name）：Floor。 \n \n \n \n \n 注意：確保地板位於 Z=0，避免懸浮。 \n \n \n \n \n 加入機器人 \n \n \n 點擊「Add」 > 「Robot」（機器人）。 \n \n \n 在下拉選單中選擇「E-puck」（一個簡單的雙輪機器人）。 \n \n \n 調整位置（Translation）：例如 (0, 0, 0.05)，使其位於地板上。 \n \n \n 注意：檢查機器人是否與地板接觸，避免穿透或漂浮。 \n \n \n \n \n 步驟 3：添加控制器 \n \n \n 點擊機器人節點（E-puck）。 \n \n \n 在屬性面板中找到「Controller」欄位。 \n \n \n 點擊下拉選單，選擇「 <extern> 」（外部控制器）。 \n \n \n 點擊「Wizard」（精靈），選擇「Create a new controller」。 \n \n \n 輸入名稱（如「avoid_obstacle」），選擇語言（如 Python）。 \n \n \n Webots 會生成一個簡單的控制器檔案。 \n \n \n \n 步驟 4：編輯控器 \n \n \xa0 \xa0 \xa0 \xa01.保存檔案。 \n \n \n \n \n \n 步驟 5：運行模擬 \n \n \n 點擊頂部選單的「Run」（運行按鈕）。 \n \n \n 觀察機器人是否能移動並避開障礙物。 \n \n \n 若有問題，檢查： \n \n \n 機器人與地板的接觸是否正常。 \n \n \n 感測器是否啟用。 \n \n \n 控制器是否正確綁定。 \n \n \n \n \n 注意事項 \n \n \n 坐標系統 ：Webots 使用 X（左右）、Y（前後）、Z（上下）的坐標系，確保物件位置合理。 \n \n \n 物理屬性 ：檢查物件的質量與摩擦係數，避免異常滑動。 \n \n \n 控制器同步 ：確保控制器與機器人節點正確關聯。 \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n \n', 'tags': '', 'url': 'w5.html'}, {'title': 'w6', 'text': '如何啟動webots：在本學期可攜程式的start.bat中，已經有在可攜上啟動的程式，只需確認 Webots_2025a_web.7z \xa0是否放入可攜套件( portable_wcm2025.7z )的 data 目錄中，在可攜裡面輸入webotsw即可開啟，開啟時系統會跳出防火牆警告，一定要選擇允許否則會被擋 \n', 'tags': '', 'url': 'w6.html'}, {'title': 'w7', 'text': '', 'tags': '', 'url': 'w7.html'}, {'title': 'w8', 'text': '複習webots \xa0 SolidReference \xa0節點的用法說明，用在 Joint 節點的 endPoint 欄位中，用來指向一個現有的 Solid 或靜態環境\xa0<static environment>。通過這種方式，可以閉合機械迴圈。 \n 當指向一個 Solid 時，唯一的限制是 Solid 和 Joint 必須是某個共同上層 Solid 的下層。 \n 意思即是指 SolidReference 是一個引用類型，允許在 Joint 節點的 endPoint 欄位中指定某個目標。 \n 它可以指向兩種類型的對象： \n \n 現有的 Solid：這是一個具體的實體，但這個 Solid 和 Joint 必須是某個共同上層 Solid 的下層。 \n 靜態環境 <static environment>：這通常指的是不動的參考框架（例如地面或固定基座） \n \n 第一作法： \n 若將 fourbar linkage 的 joint4 設置在 base link 的最右端，然後將 joint4 的 endPoint 欄位，設為 SolidReference 指向 link3，即可符合 Soild (link3) 與 Joint (joint4) 都是某個共同上層 Solid (base) 的下層。 \n 第二作法： \n 可以將 fourbar linkage 的 joint4 設置在 link3 的末端，然後將 joint4 的 endPoint 欄位指向\xa0<static environment>，讓 link3 的末端固定在 ground (其作用與固定在 base 節點相同)。 \n', 'tags': '', 'url': 'w8.html'}, {'title': 'w9', 'text': '本週為統整先前所完成的各週的進度、作業網頁內容以及心得和錄製其中自評影片。 \n \n', 'tags': '', 'url': 'w9.html'}, {'title': 'Task2', 'text': '', 'tags': '', 'url': 'Task2.html'}, {'title': 'Task3', 'text': '', 'tags': '', 'url': 'Task3.html'}, {'title': 'Task4', 'text': '2a分組網站與倉儲連結 \n 2b分組網站與倉儲連結 \n 因為上列程式已經給出兩班當時已經參與分組的學員 Github 帳號, 因此只需要從\xa0 https://mde.tw/list/2a.txt \xa0讀取學員的學號與 Github 帳號，並且在 for 迴圈中，逐一用學員的 Github 帳號相對於各班已經參與分組的學員 Github 帳號，並且列出特定學員的 Github 帳號不在前述已經參與分組的學員帳號數列中，即可列出截至當時尚未那組的學員學號。 \n \n 2a未加入團隊學員 \n', 'tags': '', 'url': 'Task4.html'}, {'title': 'Task5', 'text': '\n \n Webots是什麼? \n webots 是一套專門用來模擬行動機器人的軟體，它就像一個虛擬的機器人實驗室，可以快速幫助你設計、測試與改良機器人。你可以在裡面建構出具有真實物理特性的 3D 世界，加入各種物品與機器人，然後替機器人加裝感測器（像是攝影機、距離感測器等）和致動器（像是輪子、馬達等），再透過程式讓它們執行你想要的動作。Webots 也支援把模擬結果轉移到實體機器人上使用，例如 e-puck 或 Nao。 \n \n Webots可以做什麼? \n Webots 很適合用來進行機器人領域的研究與教學。它的應用很廣，例如： \n \n \n 設計機器人原型（無論是在學術、車用或玩具領域） \n \n \n 研究機器人的移動方式（像是雙足步行、人形機器人等） \n \n \n 模擬多個機器人互動（群體智慧或協同作業） \n \n \n 開發具學習能力的機器人（如使用 AI 或演化演算法） \n \n \n 教學、比賽訓練平台（例如 RoboCup） \n \n \n \n 使用 Webots 需要懂什麼？ \n 要使用 Webots 來寫控制機器人的程式，建議對以下語言有基本了解： \n \n \n C、C++、Java、Python、MATLAB \n \n \n 如果是新手，也可以使用 Webots 內建的圖形化程式語言 BotStudio（目前適用於部分機器人如 e-puck）。如果你想設計自己的機器人模型或場景，建議懂一些 3D 圖形概念與  VRML97 語法 ，這樣可以自訂外觀和結構。 \n \n 要去哪裡找幫助？ \n Webots 提供兩種支援方式： \n \n \n 官方支援（付費） ：提供專業服務與開發協助 \n \n \n 社群支援（免費） ：可在以下平台找到幫助（但不保證回應速度）： \n \n \n Robotics StackExchange（加上  webots  標籤） \n \n \n GitHub Discussions（問技術問題） \n \n \n GitHub Issues（回報錯誤） \n \n \n Discord（快速聊天討論） \n \n \n \n \n \n Webots 模擬是怎麼組成的？ \n 一個 Webots 模擬專案會包含： \n \n \n 一個  世界檔（.wbt） ：描述場景、物件與機器人 \n \n \n 一或多個  控制程式 ：讓機器人執行任務的程式碼 \n \n \n 可選的  物理插件 ：進一步調整物理模擬行為 \n \n \n 外部資源檔案（例如模型、貼圖等） \n \n \n \n 什麼是「世界」？ \n 在 Webots 裡，「世界」就是一個 3D 場景設定，定義了機器人和所有物件的樣貌、位置和物理特性。這些設定儲存在  .wbt  檔案中，是一種層級式的描述方式（結構有點像 VRML97）。這個檔案會指定每個機器人要用哪個控制程式，但不包含實際的程式內容。 \n \n 什麼是「控制器」？ \n 控制器就是你寫給機器人的「大腦」，用來控制它怎麼移動、感測、決策。每個控制器是獨立的程式，Webots 會在模擬一開始時自動為每個機器人開一個控制器進程。控制器可以用  C/C++、Java、Python 或 MATLAB  撰寫，放在專案資料夾裡的  controllers  目錄中。 \n \n 什麼是「監督控制器」？ \n 如果你想讓某個控制器有更高的權限，例如操控整個模擬、直接移動機器人或錄影，那就可以設定它為「 監督控制器（Supervisor） 」。只要在機器人設定中把  supervisor  欄位設成 TRUE，就可以讓它進行這些高階操作。監督控制器同樣也支援所有語言撰寫。 \n \n \n', 'tags': '', 'url': 'Task5.html'}, {'title': 'Task6', 'text': '', 'tags': '', 'url': 'Task6.html'}, {'title': 'Homework', 'text': '\n 作業 (30%) \n HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n part1: \n 請各學員在 USB 隨身碟或個人電腦上完成 cd2025 課程所需的可攜系統配置: \n 下載  portable_wcm2025.7z  (330MB, 解開壓縮後 1.4GB) \n Webots_2025a.7z  (1.5 GB, 解開後約為 2.9GB, 可單獨運作) \n Webots_2025a_web.7z  (171 MB, 解開壓縮後約為 1GB, 必須連網運作) \n Blender4.2.7z \n part2: \n 請各學員完成可攜程式系統配置後, 利用 Webots R2025a 中寬度與高度都為 0.1m 的 box 物件建立一個簡單的平面四連桿機構模擬場景. \n base (基座) 長度 1m, link1 長度 0.4m, link2 長度 0.6m, link3 長度 0.9m, 各轉軸均為 HingeJoint, joint1 旋轉速度設定為 1radian/sec. \n part3: \n 模擬場景啟動後, 按下 s 鍵機構開始作動, 按下 p 鍵後機構暫停. \n 參考資料: \n cd2025_hw1_demo.7z \n HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 各學員請利用 CAD 系統依據 HW1 的連桿尺寸與運動方式, 配置適當大小的旋轉軸以及基座後, 利用 Webots R2025a 完成一個簡單的平面四連桿機構模擬場景. \n 參考資料: \n fourbar_slvs.7z \n HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 請各分組利用CAD 系統建立一個能在電腦桌 (1600W X 700D X 740H mm) 上運作的投籃機構 ( 參考影片 )後, 導入 Webots R2025a 套件, 建立一個能由使用者透過鍵盤按鍵操作, 且具備計分板的籃球遊戲機模擬系統. \n 參考資料: \n 參考資料: \n fourbar_ball_throwing_linkage.slvs \n sixbar_ball_throwing_linkage.slvs \n \n', 'tags': '', 'url': 'Homework.html'}, {'title': 'HW1', 'text': 'HW1 (5%):  建立由 Box 組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW1 - 40932134 \n 409321341hw1 \n \n \n', 'tags': '', 'url': 'HW1.html'}, {'title': 'HW2', 'text': 'HW2 (5%):  建立由 CAD 繪製零件組成的平面四連桿機構 Webots 模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW2 - 學員學號 \n 使用 Solvespace 組合平面四連桿系統零組件 \n \n link1.slvs \n \n link2.slvs \n \n link3.slvs \n \n shaft1.slvs \n \n shaft2.slvs \n \n base.slvs \n \n fourbar_linkage_design.slvs \n 使用 Solvespace 組合平面四連桿系統零組件 \n \n hw2.slvs \n \n \n 409321341hw2 \n 心得:與 HW1 相比，HW2 的操作方式更加直覺，不需要再手動為每個連桿（link）進行定位。改為透過 SolveSpace 直接繪製各零件，完成組裝後輸出為 STL 檔，再利用切割軟體將各部位轉換為 OBJ 格式。這樣在 Webots 中匯入 mesh 時，就能自動對應到在 SolveSpace 中設定的位置，大幅簡化了定位流程，整體操作也比 HW1 更加簡單方便。', 'tags': '', 'url': 'HW2.html'}, {'title': 'HW3', 'text': 'HW3 (20%): 建立 Webots 桌上籃球遊戲機模擬系統 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 HW3 - 學員學號 \n \n', 'tags': '', 'url': 'HW3.html'}, {'title': 'Midterm', 'text': '本課程所繳交的期中成績為學員自評之學習期望成績. \n 期中考週的自評期望成績繳交流程: \n \n 整理先前所完成的各週的進度、作業網頁內容以及心得 \n 拍攝期中自評影片, 上傳至 Youtube 後, 以" 國立虎尾科技大學 - 機械設計工程系 - cd2025 期中自評- 學員學號 "為影片標題後嵌入本頁面中 \n 回填期中自評表單 \n 上傳學員期中成績 \n \n 各週進度:從 這裡 開始每周進度 \n \n 各週網頁內容: \n 第1週～第3週  主要著重於建立可攜式開發環境，並運用 Python 程式來協助分類課程分組名單。在這段期間，熟悉了程式基本操作，也加強了對資料處理流程的理解。 \n 第4週～第5週  學習如何設定個人專屬的 IPv6 網址，並透過  .bat  批次檔快速完成網路設定。這段時間也初步接觸 Webots 模擬平台，但僅限於概念理解，尚未實際進行操作。 \n 第6週～第9週  課程重心轉向 Webots 模擬操作，聚焦於機器人連桿與動作模擬的設計與實作。同時輔助使用 SolveSpace 與 Blender 等建模工具，協助建構模擬模型，提升整體模擬的準確性與表現力。 \n 期中心得: \n 經過這九週的課程學習，我對整體的系統環境建置與模擬操作有了更清楚的脈絡。從一開始透過 Python 程式處理分組名單，到中期進行 IPv6 的設定，讓我逐步理解網路與程式的結合應用，並學會使用批次檔提升操作效率。 \n 進入後期的 Webots 模擬操作，更讓我體會到模擬環境在機器人開發上的重要性。不只是單純操作模擬介面，還需要搭配幾何建模工具如 SolveSpace 和 Blender，讓整體機構更貼近實際設計。雖然這些工具在剛接觸時稍顯複雜，但隨著練習次數增加，我也慢慢掌握了其中邏輯與使用方式。 \n 整體來說，這段學習歷程讓我從程式邏輯、網路設定到模擬操作都有所接觸，不僅提升了實作能力，也讓我對未來智慧機電整合應用有了更具體的想像與期待。 \n 期中自評影片: \n \n \n', 'tags': '', 'url': 'Midterm.html'}, {'title': 'Exam', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 各學員利用 Webots R2025a 套件中的 Shape 物件, 隨堂建立指定的機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam2 (10%): 利用 CAD 零組件建立模擬場景\xa0 \n 各學員利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. \n Exam3 (20%): Webots 機電模擬場景的協同設計 \n 各分組利用 CAD (Solvespace 與 NX2312), 隨堂建立指定的系統模型零組件後, 導入 Webots R2025a 後, 建立機電系統模擬場景, 並利用 Python 程式進行互動控制. 過程中各學員必須採同步協同模式, 維護從 Github Classroom 取得的分組協同倉儲以及網站. \n 協同分組方式: \n \n 分配學員負責利用 Solvespace 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 NX2312 建立系統零組件, 過程中必須將所建構之零組件檔案與繪圖過程影片上傳至分組網頁. \n 分配學員負責利用 Webots 建立機電系統模擬場景, 並利用 Python 程式進行控制, 過程中必須將建構過程拍成帶有說明字幕的影片上傳至分組網頁. \n \n', 'tags': '', 'url': 'Exam.html'}, {'title': 'Exam1', 'text': 'Exam1 (10%): 建立 Webots 基本物件模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam1 - 學員學號 \n 409321341exam1 \n \n \n 心得：有了HW1的練習經驗，有稍微比較會操作，但還是不太熟悉，需多加練習 。', 'tags': '', 'url': 'Exam1.html'}, {'title': 'Exam2', 'text': 'Exam2 (10%): 利用 CAD 零組件建立模擬場景 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam2 -\xa04093134 \n 40932134exam2 \n \n 心得: \n 過程與HW1、2、Exam1，原理相似，唯一不同點是連桿短桿需設為自己的學號，慢慢摸索中，有愈來愈上手了。', 'tags': '', 'url': 'Exam2.html'}, {'title': 'Exam3', 'text': 'Exam3 (20%): Webots 機電模擬場景的協同設計 \n 操作影片標題: 國立虎尾科技大學 - 機械設計工程系 - cd2025 Exam3 - 學員學號 \n', 'tags': '', 'url': 'Exam3.html'}, {'title': 'Final', 'text': '期末協同專案執行過程影片、簡報與 PDf 報告檔案 (六人一組) (30%) \n 題目:  Webots 動態投籃模擬系統的協同設計 \n 說明:  \n 籃框架被配置在一定範圍內, 可隨機慢速前進、後退及左右擺動, 投籃機構系統帶有一定數量的籃球, 被配置在可自由移動的輪車上. \n 操作者可利用鍵盤特定按鍵控制投籃輪車的移動並發射投籃, 每投出一球後系統透過記分板進行計分, 並由送球機構進行補球或移動輪車取球, 遊戲可進行至全部數量籃球投完為止. \n 請將期末協同專案執行過程、內容與心得, 製作成影片，配合字幕上傳至 Youtube 後嵌入各階段的期末報告頁面中. \n 影片標題:  國立虎尾科技大學 - 機械設計工程系 - cd2025 期末報告 - 學員學號 - 各階段影片主題 \n', 'tags': '', 'url': 'Final.html'}, {'title': 'Brython', 'text': '1 add to 100 \n  導入 brython 程式庫  \n \n \n \n \n  啟動 Brython  \n \n \n \n  導入 FileSaver 與 filereader  \n \n \n \n \n  導入 ace  \n \n \n \n \n \n \n  導入 gearUtils-0.9.js Cango 齒輪繪圖程式庫  \n \n \n \n \n \n \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src1"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n \n \n \n  add 1 to 100 開始  \n \n \n  add 1 to 100 結束 \n  editor1 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor1 結束   ##########################################  \n 從 1 累加到 100 part2: \n 1 add to 100 cango_three_gears BSnake AI Tetris \n  請注意, 這裡使用 Javascript 將 localStorage["kw_py_src2"] 中存在近端瀏覽器的程式碼, 由使用者決定存檔名稱 \n \n \n \n  add 1 to 100 part2 開始  \n \n \n  add 1 to 100 part2 結束 \n  editor2 開始  \n  用來顯示程式碼的 editor 區域  \n \n  以下的表單與按鈕與前面的 Javascript doSave 函式以及 FileSaver.min.js 互相配合  \n  存擋表單開始  \n Filename:  .py   \n  存擋表單結束  \n \n  執行與清除按鈕開始  \n Run   Output   清除輸出區 清除繪圖區 Reload \n  執行與清除按鈕結束  \n \n  程式執行 ouput 區  \n \n  Brython 程式執行的結果, 都以 brython_div1 作為切入位置  \n \n  editor2 結束  \n \n \n', 'tags': '', 'url': 'Brython.html'}]};